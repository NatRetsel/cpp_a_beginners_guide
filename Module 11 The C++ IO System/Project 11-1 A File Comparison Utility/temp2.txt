/*
    This project develops a simple, yet useful file comparison utility. It works by opening both files to be compared and then reading
    and comparing each corresponding set of bytes. If a mismatch is found, the files differ. If the end of each file is reached at the
    same time and if no mismatches have been found, then the files are the same.
*/
#include <iostream>
#include <fstream>
using namespace std;

int main(int argc, char *argv[]) {
    int i;

    unsigned char buf1[1024], buf2[1024];

    if(argc!=3) {
        cout << "Usage: compfiles <file1> <file2>" << endl;
        return 1;
    }

    ifstream f1(argv[1], ios::in | ios::binary);
    if(!f1) {
        cout << "cannot open first file" << endl;
        return 1;
    }

    ifstream f2(argv[2], ios::in | ios::binary);
    if(!f2) {
        cout << "cannot open second file" << endl;
        return 1;
    }
    
    cout << "Comparing files..." << endl;

    do {
        f1.read((char *)buf1, sizeof buf1);
        f1.read((char *)buf2, sizeof buf2);

        if(f1.gcount() != f2.gcount()) {
            cout << "Files are of differing sizes" << endl;
            f1.close();
            f2.close();
            return 0;
        }

        for(i=0; i<f1.gcount(); i++) {
            if(buf1[i] != buf2[i]) {
                cout << "Files differ" << endl;
                f1.close();
                f2.close();
                return 0;
            }
        }
    } while (!f1.eof() && !f2.eof());

    cout << "Files are the same" <<endl;

    f1.close();
    f2.close();
    return 0;

}